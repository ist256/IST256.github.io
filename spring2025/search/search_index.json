{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"IST256 Spring 2025 Course Schedule Assigned readings and help videos can be found in the corresponding lesson folder on Jupyterhub. Dates Topic 1/13 - 1/19 Lesson 01: Introduction to Python Programming 1/20 - 1/26 Lesson 02: Input, Output, Variables and Types No Large group on 1/20 due to MLK Day 1/27 - 2/2 Lesson 03: Conditionals 2/3 - 2/9 Lesson 04: Iterations 2/10 - 2/16 Lesson 05: User-defined Functions, Modules 2/17 - 2/23 Lesson 06: Strings and Text Processing 2/24 - 3/2 Lesson 07: File I/O and Persistence 3/3 - 3/9 Exam Week E1 on 3/3 in Large Group 3/10 - 3/16 SPRING BREAK No Classes 3/17 - 3/23 Lesson 08: Lists 3/24 - 3/30 Lesson 09: Dictionaries and JSON 3/31 - 4/6 Lesson 10: Pandas I 4/7 - 4/13 Lesson 11: Pandas II P1 project deliverable due on 4/11 4/14 - 4/20 Lesson 12: Data Visualization 4/21 - 4/27 Lesson 13: Web API\u2019s P2 project deliverable due on 4/25 4/28 - 5/4 E2 on 4/28 in Large Group P3 and P4 Project delerables due 5/4 What\u2019s Due? There are deliberables due consistently each week. Use this table to track the due dates of all graded work in this course. Dates and times are Eastern Time Zone. Labs are due Tuesdays, Small group assignments are completed in your small group, and Homework are due Fridays. Date Due Time Due Gradebook Points Where? What is Due? 1/17/2025 11:59 PM L01 3 Jupyterhub 01-Intro/LAB-Intro.ipynb 1/15/2025 11:59 PM C1 3 Small Group Computational Literacy Diagnostic 1 1/21/2025 11:59 PM L02 3 Jupyterhub 02-Variables/LAB-Variables.ipynb 1/22/2025 11:59 PM S02 3 Jupyterhub 02-Variables/SmallGroup-Variables.ipynb 1/24/2025 11:59 PM H02 3 Jupyterhub 02-Variables/HW-Variables.ipynb 1/28/2025 11:59 PM L03 3 Jupyterhub 03-Conditionals/LAB-Conditionals.ipynb 1/29/2025 11:59 PM S03 3 Jupyterhub 03-Conditionals/SmallGroup-Conditionals.ipynb 1/31/2025 11:59 PM H03 3 Jupyterhub 03-Conditionals/HW-Conditionals.ipynb 2/4/2025 11:59 PM L04 3 Jupyterhub 04-Iterations/LAB-Iterations.ipynb 2/5/2025 11:59 PM S04 3 Jupyterhub 04-Iterations/SmallGroup-Iterations.ipynb 2/7/2025 11:59 PM H04 3 Jupyterhub 04-Iterations/HW-Iterations.ipynb 2/11/2025 11:59 PM L05 3 Jupyterhub 05-Functions/LAB-Functions.ipynb 2/12/2025 11:59 PM S05 3 Jupyterhub 05-Functions/SmallGroup-Functions.ipynb 2/14/2025 11:59 PM H05 3 Jupyterhub 05-Functions/HW-Functions.ipynb 2/18/2025 11:59 PM L06 3 Jupyterhub 06-Strings/LAB-Strings.ipynb 2/19/2025 11:59 PM S06 3 Jupyterhub 06-Strings/SmallGroup-Strings.ipynb 2/21/2025 11:59 PM H06 3 Jupyterhub 06-Strings/HW-Strings.ipynb 2/25/2025 11:59 PM L07 3 Jupyterhub 07-Files/LAB-Files.ipynb 2/26/2025 11:59 PM S07 3 Jupyterhub 07-Files/SmallGroup-Files.ipynb 2/28/2025 11:59 PM H07 3 Jupyterhub 07-Files/HW-Files.ipynb 3/3/2025 11:59 PM E1 45 Large Group E1: Exam 1 (Focus on Lessons 1-7) 3/5/2025 11:59 PM C2 3 Small Group Computational Literacy Diagnostic 2 3/18/2025 11:59 PM L08 3 Jupyterhub 08-Lists/LAB-Lists.ipynb 3/19/2025 11:59 PM S08 3 Jupyterhub 08-Lists/SmallGroup-Lists.ipynb 3/21/2025 11:59 PM H08 3 Jupyterhub 08-Lists/HW-Lists.ipynb 3/25/2025 11:59 PM L09 3 Jupyterhub 09-Dictionaries/LAB-Dictionaries.ipynb 3/26/2025 11:59 PM S09 3 Jupyterhub 09-Dictionaries/SmallGroup-Dictionaries.ipynb 3/28/2025 11:59 PM H09 3 Jupyterhub 09-Dictionaries/HW-Dictionaries.ipynb 4/1/2025 11:59 PM L10 3 Jupyterhub 10-Pandas-I/LAB-PandasI.ipynb 4/2/2025 11:59 PM S10 3 Jupyterhub 10-Pandas-I/SmallGroup-PandasI.ipynb 4/4/2025 11:59 PM H10 3 Jupyterhub 10-Pandas-I/HW-PandasI.ipynb 4/8/2025 11:59 PM L11 3 Jupyterhub 11-Pandas-II/LAB-PandasII.ipynb 4/9/2025 11:59 PM S11 3 Jupyterhub 11-Pandas-II/SmallGroup-PandasII.ipynb 4/11/2025 11:59 PM H11 3 Jupyterhub 11-Pandas-II/HW-PandasII.ipynb 4/11/2025 11:59 PM P1 0 Jupyterhub project/P1.ipynb 4/15/2025 11:59 PM L12 3 Jupyterhub 12-Visualization/LAB-Visualization.ipynb 4/16/2025 11:59 PM S12 3 Jupyterhub 12-Visualization/SmallGroup-Visualization.ipynb 4/18/2025 11:59 PM H12 3 Jupyterhub 12-Visualization/HW-Visualization.ipynb 4/22/2025 11:59 PM L13 3 Jupyterhub 13-WebAPIs/LAB-Webapis.ipynb 4/23/2025 11:59 PM S13 3 Jupyterhub 13-WebAPIs/SmallGroup-Webapis.ipynb 4/25/2025 11:59 PM H13 3 Jupyterhub 13-WebAPIs/HW-Webapis.ipynb 4/25/2025 11:59 PM P2 0 Jupyterhub project/P2.ipynb 4/28/2025 11:59 PM E2 45 Large Group E2: Exam 2 (Focus on Lessons 8-13) 5/4/2025 11:59 PM P3 0 Jupyterhub project/P3.ipynb 5/4/2025 11:59 PM P4 49 Jupyterhub project/P4.ipynb Page last revised on: 2025-01-12","title":"Home"},{"location":"#ist256-spring-2025","text":"","title":"IST256 Spring 2025"},{"location":"#course-schedule","text":"Assigned readings and help videos can be found in the corresponding lesson folder on Jupyterhub. Dates Topic 1/13 - 1/19 Lesson 01: Introduction to Python Programming 1/20 - 1/26 Lesson 02: Input, Output, Variables and Types No Large group on 1/20 due to MLK Day 1/27 - 2/2 Lesson 03: Conditionals 2/3 - 2/9 Lesson 04: Iterations 2/10 - 2/16 Lesson 05: User-defined Functions, Modules 2/17 - 2/23 Lesson 06: Strings and Text Processing 2/24 - 3/2 Lesson 07: File I/O and Persistence 3/3 - 3/9 Exam Week E1 on 3/3 in Large Group 3/10 - 3/16 SPRING BREAK No Classes 3/17 - 3/23 Lesson 08: Lists 3/24 - 3/30 Lesson 09: Dictionaries and JSON 3/31 - 4/6 Lesson 10: Pandas I 4/7 - 4/13 Lesson 11: Pandas II P1 project deliverable due on 4/11 4/14 - 4/20 Lesson 12: Data Visualization 4/21 - 4/27 Lesson 13: Web API\u2019s P2 project deliverable due on 4/25 4/28 - 5/4 E2 on 4/28 in Large Group P3 and P4 Project delerables due 5/4","title":"Course Schedule"},{"location":"#whats-due","text":"There are deliberables due consistently each week. Use this table to track the due dates of all graded work in this course. Dates and times are Eastern Time Zone. Labs are due Tuesdays, Small group assignments are completed in your small group, and Homework are due Fridays. Date Due Time Due Gradebook Points Where? What is Due? 1/17/2025 11:59 PM L01 3 Jupyterhub 01-Intro/LAB-Intro.ipynb 1/15/2025 11:59 PM C1 3 Small Group Computational Literacy Diagnostic 1 1/21/2025 11:59 PM L02 3 Jupyterhub 02-Variables/LAB-Variables.ipynb 1/22/2025 11:59 PM S02 3 Jupyterhub 02-Variables/SmallGroup-Variables.ipynb 1/24/2025 11:59 PM H02 3 Jupyterhub 02-Variables/HW-Variables.ipynb 1/28/2025 11:59 PM L03 3 Jupyterhub 03-Conditionals/LAB-Conditionals.ipynb 1/29/2025 11:59 PM S03 3 Jupyterhub 03-Conditionals/SmallGroup-Conditionals.ipynb 1/31/2025 11:59 PM H03 3 Jupyterhub 03-Conditionals/HW-Conditionals.ipynb 2/4/2025 11:59 PM L04 3 Jupyterhub 04-Iterations/LAB-Iterations.ipynb 2/5/2025 11:59 PM S04 3 Jupyterhub 04-Iterations/SmallGroup-Iterations.ipynb 2/7/2025 11:59 PM H04 3 Jupyterhub 04-Iterations/HW-Iterations.ipynb 2/11/2025 11:59 PM L05 3 Jupyterhub 05-Functions/LAB-Functions.ipynb 2/12/2025 11:59 PM S05 3 Jupyterhub 05-Functions/SmallGroup-Functions.ipynb 2/14/2025 11:59 PM H05 3 Jupyterhub 05-Functions/HW-Functions.ipynb 2/18/2025 11:59 PM L06 3 Jupyterhub 06-Strings/LAB-Strings.ipynb 2/19/2025 11:59 PM S06 3 Jupyterhub 06-Strings/SmallGroup-Strings.ipynb 2/21/2025 11:59 PM H06 3 Jupyterhub 06-Strings/HW-Strings.ipynb 2/25/2025 11:59 PM L07 3 Jupyterhub 07-Files/LAB-Files.ipynb 2/26/2025 11:59 PM S07 3 Jupyterhub 07-Files/SmallGroup-Files.ipynb 2/28/2025 11:59 PM H07 3 Jupyterhub 07-Files/HW-Files.ipynb 3/3/2025 11:59 PM E1 45 Large Group E1: Exam 1 (Focus on Lessons 1-7) 3/5/2025 11:59 PM C2 3 Small Group Computational Literacy Diagnostic 2 3/18/2025 11:59 PM L08 3 Jupyterhub 08-Lists/LAB-Lists.ipynb 3/19/2025 11:59 PM S08 3 Jupyterhub 08-Lists/SmallGroup-Lists.ipynb 3/21/2025 11:59 PM H08 3 Jupyterhub 08-Lists/HW-Lists.ipynb 3/25/2025 11:59 PM L09 3 Jupyterhub 09-Dictionaries/LAB-Dictionaries.ipynb 3/26/2025 11:59 PM S09 3 Jupyterhub 09-Dictionaries/SmallGroup-Dictionaries.ipynb 3/28/2025 11:59 PM H09 3 Jupyterhub 09-Dictionaries/HW-Dictionaries.ipynb 4/1/2025 11:59 PM L10 3 Jupyterhub 10-Pandas-I/LAB-PandasI.ipynb 4/2/2025 11:59 PM S10 3 Jupyterhub 10-Pandas-I/SmallGroup-PandasI.ipynb 4/4/2025 11:59 PM H10 3 Jupyterhub 10-Pandas-I/HW-PandasI.ipynb 4/8/2025 11:59 PM L11 3 Jupyterhub 11-Pandas-II/LAB-PandasII.ipynb 4/9/2025 11:59 PM S11 3 Jupyterhub 11-Pandas-II/SmallGroup-PandasII.ipynb 4/11/2025 11:59 PM H11 3 Jupyterhub 11-Pandas-II/HW-PandasII.ipynb 4/11/2025 11:59 PM P1 0 Jupyterhub project/P1.ipynb 4/15/2025 11:59 PM L12 3 Jupyterhub 12-Visualization/LAB-Visualization.ipynb 4/16/2025 11:59 PM S12 3 Jupyterhub 12-Visualization/SmallGroup-Visualization.ipynb 4/18/2025 11:59 PM H12 3 Jupyterhub 12-Visualization/HW-Visualization.ipynb 4/22/2025 11:59 PM L13 3 Jupyterhub 13-WebAPIs/LAB-Webapis.ipynb 4/23/2025 11:59 PM S13 3 Jupyterhub 13-WebAPIs/SmallGroup-Webapis.ipynb 4/25/2025 11:59 PM H13 3 Jupyterhub 13-WebAPIs/HW-Webapis.ipynb 4/25/2025 11:59 PM P2 0 Jupyterhub project/P2.ipynb 4/28/2025 11:59 PM E2 45 Large Group E2: Exam 2 (Focus on Lessons 8-13) 5/4/2025 11:59 PM P3 0 Jupyterhub project/P3.ipynb 5/4/2025 11:59 PM P4 49 Jupyterhub project/P4.ipynb Page last revised on: 2025-01-12","title":"What's Due?"},{"location":"about/","text":"About IST256 IST256 is an introductory programming course taught in the School of Information Studies at Syracuse university https://ischool.syr.edu . Programming is taught from the information sciences perspective with more emphasis on data-oriented applications such as text processing, data munging/analysis, Web API consumption, and visualization and less on computation. Students learn the Python https://www.python.org/ programming language and are expected to write code in the Jupyter https://jupyter.org Notebook interface. Python and Jupyter are common tools in data science today. The course uses a hosted Jupyterhub cluster https://zero-to-jupyterhub.readthedocs.io/en/latest/ for its programming environment. To code, students only need a web browser. The cluster runs on kubernetes and consists of 6 virtual machines with 8 threads and 64GB ram each. The cluster can support 100\u2019s of concurrent users and can be scaled to support more as the need arises. This website is a Github page, the source can be found here. https://github.com/IST256/IST256.github.io . The latest code repository of student assignments, labs, homework, class slides and code examples are also on Github, here: https://github.com/IST256/spring2021 . You are welcome to use the materials to take the course as an independent learner or as a foundation for teaching your own course in Python! Best, Michael Fudge mafudge at syr dot edu Many thanks to: Syracuse University ITS for providing the compute resources necessary to host the cluster https://its.syr.edu/ . Charles Severance for his excellent book, \u201cPython for Everybody\u201d https://www.py4e.com/ . Elliot Hauser for https://trinket.io . GitHub for hosting this website and the code repositories https://github.com . Nick Lyga for helping to get the kubernetes environment up and running https://nicklyga.me/ . The 100\u2019s of individuals in the Python and Jupyter communities!","title":"About"},{"location":"about/#about-ist256","text":"IST256 is an introductory programming course taught in the School of Information Studies at Syracuse university https://ischool.syr.edu . Programming is taught from the information sciences perspective with more emphasis on data-oriented applications such as text processing, data munging/analysis, Web API consumption, and visualization and less on computation. Students learn the Python https://www.python.org/ programming language and are expected to write code in the Jupyter https://jupyter.org Notebook interface. Python and Jupyter are common tools in data science today. The course uses a hosted Jupyterhub cluster https://zero-to-jupyterhub.readthedocs.io/en/latest/ for its programming environment. To code, students only need a web browser. The cluster runs on kubernetes and consists of 6 virtual machines with 8 threads and 64GB ram each. The cluster can support 100\u2019s of concurrent users and can be scaled to support more as the need arises. This website is a Github page, the source can be found here. https://github.com/IST256/IST256.github.io . The latest code repository of student assignments, labs, homework, class slides and code examples are also on Github, here: https://github.com/IST256/spring2021 . You are welcome to use the materials to take the course as an independent learner or as a foundation for teaching your own course in Python! Best, Michael Fudge mafudge at syr dot edu Many thanks to: Syracuse University ITS for providing the compute resources necessary to host the cluster https://its.syr.edu/ . Charles Severance for his excellent book, \u201cPython for Everybody\u201d https://www.py4e.com/ . Elliot Hauser for https://trinket.io . GitHub for hosting this website and the code repositories https://github.com . Nick Lyga for helping to get the kubernetes environment up and running https://nicklyga.me/ . The 100\u2019s of individuals in the Python and Jupyter communities!","title":"About IST256"},{"location":"content/","text":"Content Your reading assignments, lab walk throughs, and homework advice can be found on jupyterhub in the Content.ipynb Recordings of large group sessions are found in Blackboard","title":"Content"},{"location":"content/#content","text":"Your reading assignments, lab walk throughs, and homework advice can be found on jupyterhub in the Content.ipynb Recordings of large group sessions are found in Blackboard","title":"Content"},{"location":"links/","text":"Course Links Here\u2019s a list of links to the resources we will use in this course. It is expected you will know how to access each of these resources. Tool Purpose Link Notes Blackboard Announcements, Grades, Project Deliverables https://blackboard.syr.edu Sign in with your NetId JupyterHub Python Programming, Code Samples, Slides, Labs, HW. https://v2hub.ischool.syr.edu Sign in with your NetId Microsoft Teams Ask questions. Chat with classmates & Instructors. Virtual office hours. https://teams.ist256.com Sign in with your SU Microsoft Account Polly In-Class polling for large group sessions. https://poll.ist256.com Sign in with SU Microsoft Account Severance Textbook The popular \u201cPython for Everyone\u201d book. https://www.py4e.com/book Available in a variety of Formats. Zoom Videoconferencing tool we use large and small group sessions. https://zoom.us Access through Blackboard Zybooks Textbook OPTIONAL: Our hands-on interactive textbook. Purchase online or via the SU bookstore. https://learn.zybooks.com Your syr.edu Zybooks account","title":"Course Links"},{"location":"links/#course-links","text":"Here\u2019s a list of links to the resources we will use in this course. It is expected you will know how to access each of these resources. Tool Purpose Link Notes Blackboard Announcements, Grades, Project Deliverables https://blackboard.syr.edu Sign in with your NetId JupyterHub Python Programming, Code Samples, Slides, Labs, HW. https://v2hub.ischool.syr.edu Sign in with your NetId Microsoft Teams Ask questions. Chat with classmates & Instructors. Virtual office hours. https://teams.ist256.com Sign in with your SU Microsoft Account Polly In-Class polling for large group sessions. https://poll.ist256.com Sign in with SU Microsoft Account Severance Textbook The popular \u201cPython for Everyone\u201d book. https://www.py4e.com/book Available in a variety of Formats. Zoom Videoconferencing tool we use large and small group sessions. https://zoom.us Access through Blackboard Zybooks Textbook OPTIONAL: Our hands-on interactive textbook. Purchase online or via the SU bookstore. https://learn.zybooks.com Your syr.edu Zybooks account","title":"Course Links"},{"location":"pybot/","text":"PyBot: Your AI Tutor in this course By: Michael Fudge What the @#%!? This course includes an a free AI programming assistant for your use. I programmed the assistant over the 2022-2023 winter break and it makes heavy use of the OpenAI GPT-3 model, which has been popularized recently by chat-GPT phenomenon https://openai.com/blog/chatgpt/ . We use a special version of GPT-3 that is optimized for programming, called codex phttps://openai.com/blog/openai-codex/ . I created created the assistant for a single purpose: to study whether these technologies impact how students learn computer programming. The assistant is called PyBot and is available only within our Jupyter Hub environment https://hub.ischool.syr.edu . You are welcome to use PyBot to help you with any coding tasks, including your homework and project. Think of PyBot as an always available Python tutor. !Important! Pybot only works on notebook files in the course folder. For example: ~/library/ist256/fall2023 Invoking the PyBot The bot was implemented as a Jupyter magic. To use it, simply type the following command in an empty code cell: %%pybot {{your prompt here}} The %% is a special code to invoke the magic. The pybot is the name of the magic. The {{your prompt here}} is the prompt. What exactly is a prompt? It is a question or statement that you would like the bot to answer. For example, you might type: %%pybot write a computer program to input a temperature in Celsius and output the temperature in Fahrenheit To which PyBot will respond with the following code: #AI-Generated Output (Tokens: prompt=20, output=47, over_max=False) celsius = float(input(\"Enter the temperature in Celsius: \")) fahrenheit = (celsius * 9/5) + 32 print(\"The temperature in Fahrenheit is: \", fahrenheit) And in this case the code the bot gave us works! Enter the temperature in Celsius: 100 The temperature in Fahrenheit is: 212.0 Does this make programming irrelevant? No! Consider PyBot is only a tool, the next evolution in computer programming. It helps you to accomplish a programming task. Ultimately you must understand the concepts well enough to to explain to the bot how to produce relevant code. Also you must be able to read code well enough to verify the code the bot produces is correct! In some cases you may need to modify the code the bot produces to make it work in your specific context. The bot can solve simple problems, but it will be on you to solve more complex problems from the pieces the bot provides. Is this magic? How does it do this!? For that, I suggest reading this blog post on OpenAI codex: https://openai.com/blog/openai-codex/ Can I REALLY use this in my homework and project? Is this cheating? Its not cheating if you cite your sources!!! . Students get in trouble when they hide the origins of their sources. Citing the PyBot If the bot helped you with your homework or project, credit the PyBot. Here\u2019s the process: Leave any prompts (notebook cells where you invoked the bot) in your notebook. Leave the code the bot produced in your notebook. As it was generated. When you write your solution, COPY the bot\u2019s code in a separate cell, preserving the bot\u2019s original output. Mention how you use the bot in your reflection. Was it helpful? What did you learn from using it? Easy! Some final thoughts: Yes, it\u2019s a Python course, but really is a course in computational thinking . You should learn to code and PyBot should make you smarter not dumber . PyBot is not a replacement for YOU. It is a tool to help you. Don\u2019t trust your evil AI overlords; think for yourself. Acknowledgements Many thanks to OpenAI for making several hours of compute available for use in our course.","title":"PyBot: Your AI Tutor in this course"},{"location":"pybot/#pybot-your-ai-tutor-in-this-course","text":"By: Michael Fudge","title":"PyBot: Your AI Tutor in this course"},{"location":"pybot/#what-the","text":"This course includes an a free AI programming assistant for your use. I programmed the assistant over the 2022-2023 winter break and it makes heavy use of the OpenAI GPT-3 model, which has been popularized recently by chat-GPT phenomenon https://openai.com/blog/chatgpt/ . We use a special version of GPT-3 that is optimized for programming, called codex phttps://openai.com/blog/openai-codex/ . I created created the assistant for a single purpose: to study whether these technologies impact how students learn computer programming. The assistant is called PyBot and is available only within our Jupyter Hub environment https://hub.ischool.syr.edu . You are welcome to use PyBot to help you with any coding tasks, including your homework and project. Think of PyBot as an always available Python tutor.","title":"What the @#%!?"},{"location":"pybot/#important","text":"Pybot only works on notebook files in the course folder. For example: ~/library/ist256/fall2023","title":"!Important!"},{"location":"pybot/#invoking-the-pybot","text":"The bot was implemented as a Jupyter magic. To use it, simply type the following command in an empty code cell: %%pybot {{your prompt here}} The %% is a special code to invoke the magic. The pybot is the name of the magic. The {{your prompt here}} is the prompt. What exactly is a prompt? It is a question or statement that you would like the bot to answer. For example, you might type: %%pybot write a computer program to input a temperature in Celsius and output the temperature in Fahrenheit To which PyBot will respond with the following code: #AI-Generated Output (Tokens: prompt=20, output=47, over_max=False) celsius = float(input(\"Enter the temperature in Celsius: \")) fahrenheit = (celsius * 9/5) + 32 print(\"The temperature in Fahrenheit is: \", fahrenheit) And in this case the code the bot gave us works! Enter the temperature in Celsius: 100 The temperature in Fahrenheit is: 212.0","title":"Invoking the PyBot"},{"location":"pybot/#does-this-make-programming-irrelevant","text":"No! Consider PyBot is only a tool, the next evolution in computer programming. It helps you to accomplish a programming task. Ultimately you must understand the concepts well enough to to explain to the bot how to produce relevant code. Also you must be able to read code well enough to verify the code the bot produces is correct! In some cases you may need to modify the code the bot produces to make it work in your specific context. The bot can solve simple problems, but it will be on you to solve more complex problems from the pieces the bot provides.","title":"Does this make programming irrelevant?"},{"location":"pybot/#is-this-magic-how-does-it-do-this","text":"For that, I suggest reading this blog post on OpenAI codex: https://openai.com/blog/openai-codex/","title":"Is this magic? How does it do this!?"},{"location":"pybot/#can-i-really-use-this-in-my-homework-and-project-is-this-cheating","text":"Its not cheating if you cite your sources!!! . Students get in trouble when they hide the origins of their sources.","title":"Can I REALLY use this in my homework and project? Is this cheating?"},{"location":"pybot/#citing-the-pybot","text":"If the bot helped you with your homework or project, credit the PyBot. Here\u2019s the process: Leave any prompts (notebook cells where you invoked the bot) in your notebook. Leave the code the bot produced in your notebook. As it was generated. When you write your solution, COPY the bot\u2019s code in a separate cell, preserving the bot\u2019s original output. Mention how you use the bot in your reflection. Was it helpful? What did you learn from using it? Easy!","title":"Citing the PyBot"},{"location":"pybot/#some-final-thoughts","text":"Yes, it\u2019s a Python course, but really is a course in computational thinking . You should learn to code and PyBot should make you smarter not dumber . PyBot is not a replacement for YOU. It is a tool to help you. Don\u2019t trust your evil AI overlords; think for yourself.","title":"Some final thoughts:"},{"location":"pybot/#acknowledgements","text":"Many thanks to OpenAI for making several hours of compute available for use in our course.","title":"Acknowledgements"},{"location":"syllabus/","text":"IST256 Syllabus Spring 2025 Course Information IST256: Introduction to Python for the Information Profession Audience: IST256 or IST356? This course is for students who are new to computer programming yet desire to learn how it applies to our everyday lives. IST256 is for students with little to no programming experience. The course content is 75% python fundamentals and 25% python for data analytics. IST356 is for students with prior programming experience. The course content is 25% python fundamentals and 75% python for data analytics. Catalog Description Structured program design, development testing, implementation, and documentation of common information system applications using structured programming languages. Lectures and laboratory. Description Due to the prevalence of technology in our lives, learning to program has become the critical skill of the 21st century. Students will learn practical applications of computer programming such as how to automate tasks, manipulate data and solve problems applicable to almost any academic discipline. Learning Outcomes At the end of the course, students will be able to: Analyze complex problems by thinking computationally and systematically. Solve practical, real-world problems using a modern computer programming language.. Demonstrate the ability to read, write, discuss and code confidently. Understand how to code in teams, collaborate with others and manage source code. Acquire new programming knowledge independently. Large Group and Recitation Sections Every student in IST256 is assigned to the main section M001, then one of the recitation sections. You are required to attend both sections every week. Your recitation instructor is responsible for your grades. SU Section Class # Type Professor Professor Email Meeting Day/Time Location M001 48523 Main Section M. Fudge mafudge@syr.edu Mondays 3:45pm - 5:05pm See Myslice M002 48538 Recitation L. Covington ljcoving@syr.edu Wednesdays 3:45pm - 5:05pm See Myslice M003 48526 Recitation D. Nosky dlnosky@syr.edu Wednesdays 3:45pm - 5:05pm See Myslice M004 48527 Recitation L. Covington ljcoving@syr.edu Wednesdays 2:15pm - 3:35pm See Myslice M005 48528 Recitation N. Schneider nschneid@syr.edu Wednesdays 2:15pm - 3:35pm See Myslice M006 48529 Recitation M. Fudge mafudge@syr.edu Wednesdays 3:45pm - 5:05pm See Myslice M007 48530 Recitation S. Zaman szaman02@syr.edu Wednesdays 3:45pm - 5:05pm See Myslice M008 48541 Recitation D. Nosky dlnosky@syr.edu Wednesdays 2:15pm - 3:35pm See Myslice Office Hours Office hours are for asking questions, clearing up doubts and misunderstandings in the the coursework and getting advice / guidance on labs and homework. Please to not expect to be tutored during office hours, and please do not work on your homework during our office hours. Each of your instructor\u2019s Office Hours will be posted in Blackboard. If you require tutoring, please see the getting help section below. Understanding Approach Used in this Course Learning to program a computer does not come easy for most people. Decades of teaching programming to students like yourself has taught me it requires time, patience, practice and a well-established routine. This is not unlike the same routine required to learn a foreign language or musical instrument. There are times to practice and then times to demonstrate what you have learned. Spaced and Repetitive Practice For better or worse, this course grading is designed to force you to practice. There are various activities due each week: readings, labs, and in-class / out-of-class homework activities. These are designed to expose you to programming little each day rather than binging the content once a week. Consuming the material this way gives you multiple points of exposure and most importantly time to process. Practice activities are formative assessments. This means being correct carries the same weight as explaining your struggles when you know you are not correct and seeking help when you need it. Building Habit Through Routine Another thing we do to help you to be successful is to impose a routine upon you. The course material is conceptually difficult so we try to remove some of the logistics from learning by providing the same structure week to week: Before the main section lecture you are exposed to the topic through reading and video assignments . The focus is on understanding the concepts. During the main section lecture you observe and ask questions. You do not need write code at this point. The focus is on reading code, understanding the concepts as applied through code, learning how the code executes, and asking questions. The lab assignments help you to practice writing code for the first time. This is done in a guided fashion. You are given short, specific problems to solve with code. For each lab, a guidance video is provided to those who require it. The completed lab is submitted as evidence that you practiced and include what you have learned. During your recitation , we focus on problem solving and writing solutions with code. The problem at this phase are similar complexity as the homework. At this point every student should be writing code, learning to get comfortable writing code and troubleshooting problems. Code written in Recitation must be turned in for a participation grade. Finally, the homework assignments are your opportunity to demonstrate you can code a solution to a problem on your own. Guidance is provided as to how to approach the problem. Homework assignments are a form of practice so it is expected students will explain what they learned or are still struggling to conceptualize. Expressing your thoughts on the learning experience is an import part of learning itself. Summative Assessments Summative assessments are no longer about practice. They are about measuring what you have learned. There are two types of summative assessments in this course exams and a project . There are exams at milestones throughout the course. The project demonstrates you can learn to code independently, then explain your solution to another. Main Session Expectations (Mondays) The Monday\u2019s Large group session, section M001 in a large lecture hall. Because it can be intimidating to ask questions in this forum, you are encouraged to use the class chat offered for this course. The first slide at the beginning of large group will explain how to access the class chat. You are welcome, and encouraged to ask questions or for clarification of concepts during the lecture. You will be expected to engage in class by participating in class-wide polls, quizzes and surveys. Your responses are not graded but they are recorded as a means to measure your participation and engagement in class. Students who do not participate are noted and will be flagged for poor participation in orange success. You are encouraged to not try to code as I code, especially if you are a beginner. Instead, watch and ask questions about what you see and experience. It\u2019s far too early for most learners to try and code at this point, and there will be opportunities to do that in small group. Instead you should take nodes and ask questions. Except for the homework solution, the code I write will be made available to you after class. Recitation Expectations (Wednesdays) Recitation sessions meet with a fraction of the class. Here you will practice programming and algorithmic problem solving. You are expected to bring your fully-charged laptop to class! You will need to use it to complete in-class exercises. If you do not have your laptop, then you are not prepared for class. You will be expected to participate in class. This includes sharing your thoughts, ideas, and computer code when you are asked. Some of you might be hesitant to do this, but you need to get over it for your own benefit. Nobody starts out programming as an expert. It takes practice, experimentation, and repeated failure to get it. Please be respectful of your instructor and classmates. You are not competing against each other, you are a community. Not everyone learns at the same pace and we should be kind and respectful to our classmates who struggle. Course Resources Course Website Our course website it located at https://ist256.com or https://ist256.github.io . The course website contains the syllabus, list of due dates, and links to readings, content, videos and tools used in the course. Jupyterhub Our programming environment is a private-cloud web application called Jupyter Hub. https://v2hub.ischool.syr.edu . This is the de-facto programming environment of the scientific community. All students have an account; use your SU Microsoft Account (NetID and password) to login. After you login you will see a library folder inside that folder is an ist256 folder. All of the course content (lecture slides, code samples, labs, homework) is available in this folder. Textbooks The following text is required : Python for Everybody: Exploring Data In Python 3 by Charles Severance. https://www.py4e.com/book . The book is free and available in several formats from the URL provided. There are assigned readings which must be completed prior to each large group lecture. The reading can be found in the content section of the website and the course syllabus. In addition to the required reading the last 4 units have custom readings authored by your instructor. Here are some additional textbook recommendations . Consider these supplemental resources: Automate the Boring Stuff with Python: Practical Programming for Total Beginners by Al Sweigert https://automatetheboringstuff.com/ . Free online resource. A Byte of Python , https://www.gitbook.com/book/swaroopch/byte-of-python/details . Free online resource. Dive into Python , Mark Pilgrim http://getpython3.com/diveintopython3/ . Free online resource. Learn python the hard way , Zed Shaw http://learnpythonthehardway.org/book/ . Free online resource. Python Practice Book , Anad Chitpothu http://anandology.com/python-practice-book/index.html . Free online Resource. Programming In Python 3 , Zybooks https://www.zybooks.com/catalog/programming-in-python-3/ . Paid resource, approximately $60 for the semester. NetID, Google and Microsoft Accounts This course will require you to use your Syracuse University provided Google and Microsoft Accounts. Both accounts are based on your NetId. Your Google account is netid@g.syr.edu and your Microsoft Account is netid@syr.edu . Learn more: NetID: https://netid.syr.edu/ SU Microsoft Account: Sign in to Microsoft with the email netid@syr.edu SU Google Account: Sign in to google with the email netid@g.syr.edu 3rd Party Services Used in This Course This course uses a variety of 3rd party services to supplement and enhance your learning experience. Here\u2019s a list of with links to the resources we will use in this course. It is expected you will know how to access each of these resources. Tool Purpose Link Notes Blackboard Announcements, Grades https://blackboard.syr.edu Sign in with your NetId JupyterHub Python Programming, Code Samples, Slides, Labs, HW. https://v2hub.ischool.syr.edu Sign in with your NetId Microsoft Teams Chat with classmates / Instructors. Virtual office hours. https://teams.ist256.com Sign in with your SU Microsoft Account Polley In-Class polling for large group sessions. https://poll.ist256.com Sign in with your SU Microsoft Account Severance Textbook The popular \u201cPython for Everyone\u201d book. https://www.py4e.com/book Available in a variety of different formats. Zoom Videoconferencing tool we use for office hours and student support. https://zoom.us Access through Blackboard Please consult the Course Links section for details. Bring Your Own Device This course uses the BYOD (Bring Your Own Device) model. For Large Group you need a device to ask and answer questions, basically to participate in group chat and polls (Polley). This can be a smartphone, tablet or laptop (Mac, Windows, or Chromebook). Do not try to code along in large group unless you are experienced. It is best to take notes and ask questions. For Recitation you need a device for which you can write code in the browser using Jupyter Hub. This should be a laptop computer (Mac, Windows or Chromebook). You will be expected to bring this device to recitation and use it to write code as part of participating in the recitation. Since you will code in a web browser using the provided JupyterHub platform, the hardware requirements are minimal. Any laptop, or chromebook should suffice. Tutoring The University offers free group tutoring for this course through the Center for Learning and Student Success (CLASS). Sign up for tutoring at: http://myt.syr.edu . For more information on individual and group tutoring sessions, please visit: https://class.syr.edu/academic-support/ Methods of Evaluation Grading This course uses a well thought out mix of formative, summative, in-class and out-of-class instruments to assess your knowledge acquisition. A variety of techniques are used to cater to students of different learning styles and assess the course learning outcomes. Assessment Name Blackboard Gradebook Type Learning Outcomes Quantity Points Each Points Total Pct Of Total Grade How Do I Turn it in? Exams E1 - E2 Assessment 1,2,3 2 45 90 35% See course schedule for dates Project P1 - P4 Assessment 1,2,3,5 1 49 49 20% Project folder on Jupyterhub Class Coding Labs L01 - L13 Practice 1,2,3,4 13 3 39 Run the submission script at end of the Lab in Jupyterhub Homework H02 - H13 Practice 1,2,3,4 12 3 36 Run the submission script at end of the Homework in Jupyterhub Recitation Code S02 - S13 Practice 1,2,3 12 3 36 Run the submission script at the end of recitation Computational Literacy Diagnostic C1 - C2 Practice 1 2 3 6 45% In Small Group from Blackboard TOTAL 256 For a comprehensive list due dates and times for all assignments, consult the What\u2019s Due? section of the Course Schedule . Exams (E1 - E2) Exams are high-stakes, summative assessments. They measure the individual\u2019s ability to recall, understand, and apply the course material. They are one of two instruments in this course which measures your mastery of the learning outcomes. There will be 2 exams in the course. Each exam focuses on specific lessons, but due to the nature of the course material, all exams are cumulative. Exams are issued in class. Exams are closed book. No used of Notes, Jupyterhub, or any outside resources. You will have 45 minutes to completethe exam. Students can bring a one page cheat sheet with typed or hand written notes and/or code samples. Questions consist of multiple choice, fill-in-the blank, and short-answer. If you require a special testing accommodation, you should schedule to take the exam in the CDS testing center as it will be difficult to accommodate exam time extensions in class. There are no make-up exams. Exam dates are posted on the syllabus, please plan accordingly. Project (P1 - P4) The project is the other high-stakes summative assessment. The goal of the project is to demonstrate your ability as an individual to perform a data analysis in Python. It should represent an accurate culmination of what you have learned in the course. You will work on the project individually, be expected to produce working code, and be able to explain it at both a high and detailed level. The project is divided into 4 phases; due dates are posted on the course schedule. You will receive feedback and advice after the first two deliverables; a project grade after the final deliverable. Each project phase must be submitted on Jupyterhub using the provided submission notebook. Late submissions are not accepted. We need time to grade. The What\u2019s Due section of the syllabus outlines the two exam dates. Project Phases Phase Name Deliverables P1 Data Set Selection Chose a primary and backup dataset of interest for which you will perform your data analysis. You will recieve feedback only. P2 Exploratory Data Analysis Write python code to explore your dataset as to understand it and to extract information as to create your data story. P3 Data Product Write python code to tell a data story with your dataset. This should allow uses to interact with the data and see visualizations. P4 Demo and Reflection Demo video of how your data product works and a video reflection of what you learned. Criteria for Project Grade Complete all project deliverables on time, and to satisfaction as per the requirements. While you recieve a grade for P4, work from all other phases are factored into your grade. Your code clearly demonstrates what you learned; the code you write is in the style learned throughout the course. Take instructor feedback was taken into consideration. Journal as your work on your project, recording time and tasks. Effective data analysis, coherent data story, evidence of manipulations to source data as to create improvements to the data story. Polished final data product that uses interact for inputs. In addition, there is a grade limit based on the number of lines of student-written code that is used in the project. Note: copies of code from class or elsewhere do not count. This must be code you wrote yourself that directly impacts the project\u2019s behavior. Lines of student-written code in the project Maximum Possible grade 100 or more A+ 50 to 100 B+ Under 50 C+ Grading Scale For Project Finally, you are assigned a letter grade for your project. This letter grade is translated to a number of points based on this table. Project Grade Assigned Points A+ 49 A 47 A- 45 B+ 42 B 40 B- 37 C+ 35 C 32 C- 30 D+ 27 D 25 D- 20 F 0 Specifics on the project as well as details of each deliverable can be found under your project folder in Jupyterhub. Class Coding Labs (L01 - L13) Each week there will be an out-of-class hands-on lab programming activity. The purpose of the lab is to provide guided, hands-on programming practice. Labs are your first opportunity to get your hands on a keyboard and start programming. This is a low-stakes assessment, formative assessment. The What\u2019s Due section of the syllabus identifies the lab you should complete. You can find the lab activity on JupyterHub. This activity must be completed and turned submitted by the due date. You may work alone or with a partner as you complete the lab. If you work with another, you should both complete the lab individually, and you should make a note of who your lab partner was when you completed your work. As to not draw attention to a potential academic integrity violation. If you are having difficulty completing the lab, you are welcome to review the lab walk-through video which guide you through the more difficult parts of the lab. You are encouraged to only consult the walk-through when you are stuck. Rubric for Class Coding Labs Lab Criteria Definitions: Code Correct means all You Code sections of the lab are correct. Code Complete means all You Code sections have an honest attempt to code the problem at hand. Please note this does not imply the code is correct. If the code is not correct, there is an adequate reflection with student questions. Cells Executed means all code cells in the lab display evidence they were executed in your lab submission. Metacognition Complete means the student made an honest effort to answer the open-ended questions in the lab adequately conveying what you have learned and what still confuses you. This should be evident in the work you have done to complete the lab. We value reflection. It is important to the learning process. Lab Criteria Assigned Grade All 4 criteria met 3 3 criteria met 2 2 criteria met 1 Less than 2 criteria met 0 Homework (H02 - H13) Practice makes perfect. Each week you will be assigned homework to complete outside of class. The goal of the homework is practice problem solving with code independently. Throughout the process you should take inventory of your abilities with respect to the material. While it is admirable to get the code correct, that is not the evaluation criteria nor is it the purpose of the homework. You should use the homework as a personal gauge for how well you are grasping the material. You can find the the homework assignments on JupyterHub. The What\u2019s Due section of the syllabus identifies the homework assignment you should complete. Homework are individual assignments . You can collaborate on strategy but you must must work alone on the assignment. You must be able to explain the code you write, or it will be considered an academic integrity violation. It\u2019s not about getting it right, but it is about making an honest self-assessment! For each homework there is an advice video which provides hints and tips for how you can approach the homework assignment. You are encouraged to only consult the video when you are having difficulty with the homework. If you get assistance from somewhere else, such as online, or someone else such as a tutor, or the an AI assistant you must divulge that in your submission or it will be considered an academic integrity violation. Rubric for Homework Homework Criteria Definitions: Code Correct means an honest attempt was made at a solution and the solution is correct. For incorrect solutions, the code runs, might not be correct, but there is some explanation in the Metacognition section. Code Well Written means your code is easy to understand, modular in nature, has aptly named variables, was programmed in the style we learned in class, and demonstrates what you learned that week. Problem Analysis Complete problem analysis was complete, identifying the problem\u2019s inputs, outputs, and algorithm/plan. Metacognition Complete means the student made an honest effort to answer the open-ended questions in the assignment. Homework Criteria Assigned Grade All 4 criteria met 3 3 criteria met 2 2 criteria met 1 Less than 2 criteria met 0 Recitation Code Assignment (S02 - S13) Your recitation professor will measure attendance and participation each session through you turning in your recitation code activity. This is the code you work on in class with your classmates. If you are not in class, you will not recieve credit. The specific criteria is entirely at the discretion of your instructor, but most likely consists participating in the programming assignment completed in class. Computational Literacy Diagnostic (C1 - C2) There are two Diagnostic exams issues in class. The purpose of these exams is to measure student\u2019s computational literacy skills before and after the foundational units in the course. This information is used to study the effectiveness of the course material in improving computational literacy. These exams are not graded. Points are awarded for completion when assigned in class. Grading Scale For Final Grade We use the following grading scale for translating your total points earned into a letter grade to be submitted to the University registrar. Student Achievement Total Points Earned Registrar Grade Grade Points Mastery 243 - 256 A 4.000 230 - 242 A- 3.666 Satisfactory 217 - 229 B+ 3.333 204 - 216 B 3.000 192 - 203 B- 2.666 Low Passing 179 - 191 C+ 2.333 166 - 178 C 2.000 153 - 165 C- 1.666 Unsatisfactory 128 - 152 D 1.000 0 - 127 F 0.000 Course Specific Policies Due Dates Late work is not accepted. Due to the formative nature of work in the course (practice with timely feedback), it does not make sense to accept late work. Please plan to keep pace with the course by completing your practice exercises on time. Due dates are posted on the Syllabus in the course schedule section, specifically What\u2019s Due? . Due dates are also posted in Blackboard. Once again: In order to provide timely and relevant feedback, no late work is accepted. Exceptions will only be made under extreme circumstances with supporting University documentation of illness or personal reasons. Extra Credit Earning Research Credit through the CITRA Portal This course participates in the Communication, Information, and Technology Research Alliance (CITRA) Research Pool. This is a shared resource for students interested in participating in scientific research being conducted by Newhouse or iSchool faculty and students, and you can earn credit for this course in exchange for volunteering for those studies. At any time during the semester, you can visit https://ischool.syr.edu/citra to read more about the study participation opportunities. Note that there may not always be studies available and you might not be eligible for all studies, but that the list of studies is updated frequently so you should check for new studies throughout the semester. For each study listed there are specific instructions for how to sign up and participate\u2014if you have questions, please email the researcher listed directly. When you sign up for a CITRA Pool study, you will earn credits equal to roughly 1 credit for each 30 minutes of study-participation time (although some studies could be worth more or less, depending on what you are asked to do). Each CITRA Pool credit can be assigned only to one course, and study participation must be completed by the last class day of the semester. Finally, it is important to understand that it is not mandatory that you participate in research to earn course credit. If you would still like to earn course credit but are not interested in volunteering for any of the CITRA Pool studies, you may contact the coordinators of the CITRA Pool for more information about alternative credit activities. For iSchool courses, your contact is the CITRA coordinator Dr. Jaime Banks (banks@syr.edu). You may also email those contacts for any other questions, comments, or concerns you have about the CITRA Pool system. Additional extra credit opportunities may be available throughout the semester. Your instructor will announce the details if they are available. For our particular class you are limited to earning extra 9 credits for the semester, or the equivalent of 3 practice assignments (lab, small group, or homework). Course Withdrawal Only the main section instructor can sign a withdraw petition. We will only sign a withdraw from this course based on poor academic performance (F grade). You can always re-take the course and replace your failing grade with a passing grade. If you are putting in the time and effort it is very difficult to fail this course in the first place. This reserves course withdraws for their original intended purpose - extreme circumstances with supporting University documentation of illness or personal reasons. Use of AI Assistants Based on the assignments in this course and our specified learning outcomes, the full use of artificial intelligence as a tool, with disclosure and citation, is permitted in this course. Students do not need to ask permission to use these tools before starting an assignment, but they must explicitly and fully indicate which tools were used and describe how they were used. Course Honor Code - Academic Integrity What Does Academic Integrity Mean In This Course? The course honor code represents our commitment to Academic Integrity in a programming course. I drafted the class honor code to avoid academic negligence - situations where students are unaware that their actions are actually a form of cheating. Our honor code remedies this problem by clearly stating the expectations of Academic Integrity for this course. It states: All work is my own . Answers on all student work, assignments (labs, homework, problem sets, projects, papers, etc\u2026) and assessments (quizzes, exams, tests, etc\u2026) are my own individual work (except where collaboration is explicitly allowed and disclosed). In the case where collaboration is permitted I will only collaborate within my team. Your own work means it manifests your own thoughts and ideas, not someone else\u2019s. AI is included in the \u201csomeone else.\u201d I will not share answers. I will not make answers (either my own or the professor\u2019s) to work, assignments (labs, problem sets, projects, papers, homework, etc\u2026) and assessments (quizzes, exams, tests, etc\u2026) available to anyone else in or out of class. This includes posting them on the web / chegg / course hero, or sharing them in test banks. I will not misrepresent my ability. I will not engage in any activity which misrepresents or falsifies my knowledge of the subject matter and therefore improves my grade dishonestly. This includes unsanctioned test aids, copying homework, and assistance from unapproved sources outside of class. This includes passing off AI output as your own work. I will give credit. I will always pay attribution to my sources, and not misrepresent the works of others as my own. If you get code from the internet, a tutor, or an AI assistant, you must cite it like you would any source in an academic paper. If you used AI, disclose that. I accept the honor code and its consequences. I understand and accept that that all work I submit is subject to the honor code, and if I violate this honor code I my instructor is obligated to report me to the University\u2019s office of Academic Integrity. This can be easily summarized as: If code you are submitting did not originate from you, you must clearly disclose where it came from. When in doubt, ask. When unsure, disclose openly. Most students who get into trouble are trying to hide their academic dishonesty. Don\u2019t do that. We will catch you easily. Sanctions for Violations of Academic Integrity Oops. I violated academic integrity. What now? All suspected academic integrity violation will be reported to the university\u2019s office of academic integrity. Proposed sanction for violations of a low-stakes assessment such as a homework assignment or lab, is a grade of zero . Proposed sanction for any violation on a summative assessment such as an exam or the final project is a grade of F in the course . Syracuse University Policies Syracuse University has a variety of other policies designed to guarantee that students live and study in a community respectful of their needs and those of fellow students. These policies apply to this course and can be found at this URL: https://academicaffairs.syracuse.edu/important-syllabus-reminders/ Course Schedule Assigned readings and help videos can be found in the corresponding lesson folder on Jupyterhub. Dates Topic 1/13 - 1/19 Lesson 01: Introduction to Python Programming 1/20 - 1/26 Lesson 02: Input, Output, Variables and Types No Large group on 1/20 due to MLK Day 1/27 - 2/2 Lesson 03: Conditionals 2/3 - 2/9 Lesson 04: Iterations 2/10 - 2/16 Lesson 05: User-defined Functions, Modules 2/17 - 2/23 Lesson 06: Strings and Text Processing 2/24 - 3/2 Lesson 07: File I/O and Persistence 3/3 - 3/9 Exam Week E1 on 3/3 in Large Group 3/10 - 3/16 SPRING BREAK No Classes 3/17 - 3/23 Lesson 08: Lists 3/24 - 3/30 Lesson 09: Dictionaries and JSON 3/31 - 4/6 Lesson 10: Pandas I 4/7 - 4/13 Lesson 11: Pandas II P1 project deliverable due on 4/11 4/14 - 4/20 Lesson 12: Data Visualization 4/21 - 4/27 Lesson 13: Web API\u2019s P2 project deliverable due on 4/25 4/28 - 5/4 E2 on 4/28 in Large Group P3 and P4 Project delerables due 5/4 What\u2019s Due? There are deliberables due consistently each week. Use this table to track the due dates of all graded work in this course. Dates and times are Eastern Time Zone. Labs are due Tuesdays, Small group assignments are completed in your small group, and Homework are due Fridays. Date Due Time Due Gradebook Points Where? What is Due? 1/17/2025 11:59 PM L01 3 Jupyterhub 01-Intro/LAB-Intro.ipynb 1/15/2025 11:59 PM C1 3 Small Group Computational Literacy Diagnostic 1 1/21/2025 11:59 PM L02 3 Jupyterhub 02-Variables/LAB-Variables.ipynb 1/22/2025 11:59 PM S02 3 Jupyterhub 02-Variables/SmallGroup-Variables.ipynb 1/24/2025 11:59 PM H02 3 Jupyterhub 02-Variables/HW-Variables.ipynb 1/28/2025 11:59 PM L03 3 Jupyterhub 03-Conditionals/LAB-Conditionals.ipynb 1/29/2025 11:59 PM S03 3 Jupyterhub 03-Conditionals/SmallGroup-Conditionals.ipynb 1/31/2025 11:59 PM H03 3 Jupyterhub 03-Conditionals/HW-Conditionals.ipynb 2/4/2025 11:59 PM L04 3 Jupyterhub 04-Iterations/LAB-Iterations.ipynb 2/5/2025 11:59 PM S04 3 Jupyterhub 04-Iterations/SmallGroup-Iterations.ipynb 2/7/2025 11:59 PM H04 3 Jupyterhub 04-Iterations/HW-Iterations.ipynb 2/11/2025 11:59 PM L05 3 Jupyterhub 05-Functions/LAB-Functions.ipynb 2/12/2025 11:59 PM S05 3 Jupyterhub 05-Functions/SmallGroup-Functions.ipynb 2/14/2025 11:59 PM H05 3 Jupyterhub 05-Functions/HW-Functions.ipynb 2/18/2025 11:59 PM L06 3 Jupyterhub 06-Strings/LAB-Strings.ipynb 2/19/2025 11:59 PM S06 3 Jupyterhub 06-Strings/SmallGroup-Strings.ipynb 2/21/2025 11:59 PM H06 3 Jupyterhub 06-Strings/HW-Strings.ipynb 2/25/2025 11:59 PM L07 3 Jupyterhub 07-Files/LAB-Files.ipynb 2/26/2025 11:59 PM S07 3 Jupyterhub 07-Files/SmallGroup-Files.ipynb 2/28/2025 11:59 PM H07 3 Jupyterhub 07-Files/HW-Files.ipynb 3/3/2025 11:59 PM E1 45 Large Group E1: Exam 1 (Focus on Lessons 1-7) 3/5/2025 11:59 PM C2 3 Small Group Computational Literacy Diagnostic 2 3/18/2025 11:59 PM L08 3 Jupyterhub 08-Lists/LAB-Lists.ipynb 3/19/2025 11:59 PM S08 3 Jupyterhub 08-Lists/SmallGroup-Lists.ipynb 3/21/2025 11:59 PM H08 3 Jupyterhub 08-Lists/HW-Lists.ipynb 3/25/2025 11:59 PM L09 3 Jupyterhub 09-Dictionaries/LAB-Dictionaries.ipynb 3/26/2025 11:59 PM S09 3 Jupyterhub 09-Dictionaries/SmallGroup-Dictionaries.ipynb 3/28/2025 11:59 PM H09 3 Jupyterhub 09-Dictionaries/HW-Dictionaries.ipynb 4/1/2025 11:59 PM L10 3 Jupyterhub 10-Pandas-I/LAB-PandasI.ipynb 4/2/2025 11:59 PM S10 3 Jupyterhub 10-Pandas-I/SmallGroup-PandasI.ipynb 4/4/2025 11:59 PM H10 3 Jupyterhub 10-Pandas-I/HW-PandasI.ipynb 4/8/2025 11:59 PM L11 3 Jupyterhub 11-Pandas-II/LAB-PandasII.ipynb 4/9/2025 11:59 PM S11 3 Jupyterhub 11-Pandas-II/SmallGroup-PandasII.ipynb 4/11/2025 11:59 PM H11 3 Jupyterhub 11-Pandas-II/HW-PandasII.ipynb 4/11/2025 11:59 PM P1 0 Jupyterhub project/P1.ipynb 4/15/2025 11:59 PM L12 3 Jupyterhub 12-Visualization/LAB-Visualization.ipynb 4/16/2025 11:59 PM S12 3 Jupyterhub 12-Visualization/SmallGroup-Visualization.ipynb 4/18/2025 11:59 PM H12 3 Jupyterhub 12-Visualization/HW-Visualization.ipynb 4/22/2025 11:59 PM L13 3 Jupyterhub 13-WebAPIs/LAB-Webapis.ipynb 4/23/2025 11:59 PM S13 3 Jupyterhub 13-WebAPIs/SmallGroup-Webapis.ipynb 4/25/2025 11:59 PM H13 3 Jupyterhub 13-WebAPIs/HW-Webapis.ipynb 4/25/2025 11:59 PM P2 0 Jupyterhub project/P2.ipynb 4/28/2025 11:59 PM E2 45 Large Group E2: Exam 2 (Focus on Lessons 8-13) 5/4/2025 11:59 PM P3 0 Jupyterhub project/P3.ipynb 5/4/2025 11:59 PM P4 49 Jupyterhub project/P4.ipynb Page last revised on: 2025-01-12","title":"Syllabus"},{"location":"syllabus/#ist256-syllabus-spring-2025","text":"","title":"IST256 Syllabus Spring 2025"},{"location":"syllabus/#course-information","text":"IST256: Introduction to Python for the Information Profession","title":"Course Information"},{"location":"syllabus/#audience-ist256-or-ist356","text":"This course is for students who are new to computer programming yet desire to learn how it applies to our everyday lives. IST256 is for students with little to no programming experience. The course content is 75% python fundamentals and 25% python for data analytics. IST356 is for students with prior programming experience. The course content is 25% python fundamentals and 75% python for data analytics.","title":"Audience: IST256 or IST356?"},{"location":"syllabus/#catalog-description","text":"Structured program design, development testing, implementation, and documentation of common information system applications using structured programming languages. Lectures and laboratory.","title":"Catalog Description"},{"location":"syllabus/#description","text":"Due to the prevalence of technology in our lives, learning to program has become the critical skill of the 21st century. Students will learn practical applications of computer programming such as how to automate tasks, manipulate data and solve problems applicable to almost any academic discipline.","title":"Description"},{"location":"syllabus/#learning-outcomes","text":"At the end of the course, students will be able to: Analyze complex problems by thinking computationally and systematically. Solve practical, real-world problems using a modern computer programming language.. Demonstrate the ability to read, write, discuss and code confidently. Understand how to code in teams, collaborate with others and manage source code. Acquire new programming knowledge independently.","title":"Learning Outcomes"},{"location":"syllabus/#large-group-and-recitation-sections","text":"Every student in IST256 is assigned to the main section M001, then one of the recitation sections. You are required to attend both sections every week. Your recitation instructor is responsible for your grades. SU Section Class # Type Professor Professor Email Meeting Day/Time Location M001 48523 Main Section M. Fudge mafudge@syr.edu Mondays 3:45pm - 5:05pm See Myslice M002 48538 Recitation L. Covington ljcoving@syr.edu Wednesdays 3:45pm - 5:05pm See Myslice M003 48526 Recitation D. Nosky dlnosky@syr.edu Wednesdays 3:45pm - 5:05pm See Myslice M004 48527 Recitation L. Covington ljcoving@syr.edu Wednesdays 2:15pm - 3:35pm See Myslice M005 48528 Recitation N. Schneider nschneid@syr.edu Wednesdays 2:15pm - 3:35pm See Myslice M006 48529 Recitation M. Fudge mafudge@syr.edu Wednesdays 3:45pm - 5:05pm See Myslice M007 48530 Recitation S. Zaman szaman02@syr.edu Wednesdays 3:45pm - 5:05pm See Myslice M008 48541 Recitation D. Nosky dlnosky@syr.edu Wednesdays 2:15pm - 3:35pm See Myslice","title":"Large Group and Recitation Sections"},{"location":"syllabus/#office-hours","text":"Office hours are for asking questions, clearing up doubts and misunderstandings in the the coursework and getting advice / guidance on labs and homework. Please to not expect to be tutored during office hours, and please do not work on your homework during our office hours. Each of your instructor\u2019s Office Hours will be posted in Blackboard. If you require tutoring, please see the getting help section below.","title":"Office Hours"},{"location":"syllabus/#understanding-approach-used-in-this-course","text":"Learning to program a computer does not come easy for most people. Decades of teaching programming to students like yourself has taught me it requires time, patience, practice and a well-established routine. This is not unlike the same routine required to learn a foreign language or musical instrument. There are times to practice and then times to demonstrate what you have learned.","title":"Understanding Approach Used in this Course"},{"location":"syllabus/#spaced-and-repetitive-practice","text":"For better or worse, this course grading is designed to force you to practice. There are various activities due each week: readings, labs, and in-class / out-of-class homework activities. These are designed to expose you to programming little each day rather than binging the content once a week. Consuming the material this way gives you multiple points of exposure and most importantly time to process. Practice activities are formative assessments. This means being correct carries the same weight as explaining your struggles when you know you are not correct and seeking help when you need it.","title":"Spaced and Repetitive Practice"},{"location":"syllabus/#building-habit-through-routine","text":"Another thing we do to help you to be successful is to impose a routine upon you. The course material is conceptually difficult so we try to remove some of the logistics from learning by providing the same structure week to week: Before the main section lecture you are exposed to the topic through reading and video assignments . The focus is on understanding the concepts. During the main section lecture you observe and ask questions. You do not need write code at this point. The focus is on reading code, understanding the concepts as applied through code, learning how the code executes, and asking questions. The lab assignments help you to practice writing code for the first time. This is done in a guided fashion. You are given short, specific problems to solve with code. For each lab, a guidance video is provided to those who require it. The completed lab is submitted as evidence that you practiced and include what you have learned. During your recitation , we focus on problem solving and writing solutions with code. The problem at this phase are similar complexity as the homework. At this point every student should be writing code, learning to get comfortable writing code and troubleshooting problems. Code written in Recitation must be turned in for a participation grade. Finally, the homework assignments are your opportunity to demonstrate you can code a solution to a problem on your own. Guidance is provided as to how to approach the problem. Homework assignments are a form of practice so it is expected students will explain what they learned or are still struggling to conceptualize. Expressing your thoughts on the learning experience is an import part of learning itself.","title":"Building Habit Through Routine"},{"location":"syllabus/#summative-assessments","text":"Summative assessments are no longer about practice. They are about measuring what you have learned. There are two types of summative assessments in this course exams and a project . There are exams at milestones throughout the course. The project demonstrates you can learn to code independently, then explain your solution to another.","title":"Summative Assessments"},{"location":"syllabus/#main-session-expectations-mondays","text":"The Monday\u2019s Large group session, section M001 in a large lecture hall. Because it can be intimidating to ask questions in this forum, you are encouraged to use the class chat offered for this course. The first slide at the beginning of large group will explain how to access the class chat. You are welcome, and encouraged to ask questions or for clarification of concepts during the lecture. You will be expected to engage in class by participating in class-wide polls, quizzes and surveys. Your responses are not graded but they are recorded as a means to measure your participation and engagement in class. Students who do not participate are noted and will be flagged for poor participation in orange success. You are encouraged to not try to code as I code, especially if you are a beginner. Instead, watch and ask questions about what you see and experience. It\u2019s far too early for most learners to try and code at this point, and there will be opportunities to do that in small group. Instead you should take nodes and ask questions. Except for the homework solution, the code I write will be made available to you after class.","title":"Main Session Expectations (Mondays)"},{"location":"syllabus/#recitation-expectations-wednesdays","text":"Recitation sessions meet with a fraction of the class. Here you will practice programming and algorithmic problem solving. You are expected to bring your fully-charged laptop to class! You will need to use it to complete in-class exercises. If you do not have your laptop, then you are not prepared for class. You will be expected to participate in class. This includes sharing your thoughts, ideas, and computer code when you are asked. Some of you might be hesitant to do this, but you need to get over it for your own benefit. Nobody starts out programming as an expert. It takes practice, experimentation, and repeated failure to get it. Please be respectful of your instructor and classmates. You are not competing against each other, you are a community. Not everyone learns at the same pace and we should be kind and respectful to our classmates who struggle.","title":"Recitation Expectations (Wednesdays)"},{"location":"syllabus/#course-resources","text":"","title":"Course Resources"},{"location":"syllabus/#course-website","text":"Our course website it located at https://ist256.com or https://ist256.github.io . The course website contains the syllabus, list of due dates, and links to readings, content, videos and tools used in the course.","title":"Course Website"},{"location":"syllabus/#jupyterhub","text":"Our programming environment is a private-cloud web application called Jupyter Hub. https://v2hub.ischool.syr.edu . This is the de-facto programming environment of the scientific community. All students have an account; use your SU Microsoft Account (NetID and password) to login. After you login you will see a library folder inside that folder is an ist256 folder. All of the course content (lecture slides, code samples, labs, homework) is available in this folder.","title":"Jupyterhub"},{"location":"syllabus/#textbooks","text":"The following text is required : Python for Everybody: Exploring Data In Python 3 by Charles Severance. https://www.py4e.com/book . The book is free and available in several formats from the URL provided. There are assigned readings which must be completed prior to each large group lecture. The reading can be found in the content section of the website and the course syllabus. In addition to the required reading the last 4 units have custom readings authored by your instructor. Here are some additional textbook recommendations . Consider these supplemental resources: Automate the Boring Stuff with Python: Practical Programming for Total Beginners by Al Sweigert https://automatetheboringstuff.com/ . Free online resource. A Byte of Python , https://www.gitbook.com/book/swaroopch/byte-of-python/details . Free online resource. Dive into Python , Mark Pilgrim http://getpython3.com/diveintopython3/ . Free online resource. Learn python the hard way , Zed Shaw http://learnpythonthehardway.org/book/ . Free online resource. Python Practice Book , Anad Chitpothu http://anandology.com/python-practice-book/index.html . Free online Resource. Programming In Python 3 , Zybooks https://www.zybooks.com/catalog/programming-in-python-3/ . Paid resource, approximately $60 for the semester.","title":"Textbooks"},{"location":"syllabus/#netid-google-and-microsoft-accounts","text":"This course will require you to use your Syracuse University provided Google and Microsoft Accounts. Both accounts are based on your NetId. Your Google account is netid@g.syr.edu and your Microsoft Account is netid@syr.edu . Learn more: NetID: https://netid.syr.edu/ SU Microsoft Account: Sign in to Microsoft with the email netid@syr.edu SU Google Account: Sign in to google with the email netid@g.syr.edu","title":"NetID, Google and Microsoft Accounts"},{"location":"syllabus/#3rd-party-services-used-in-this-course","text":"This course uses a variety of 3rd party services to supplement and enhance your learning experience. Here\u2019s a list of with links to the resources we will use in this course. It is expected you will know how to access each of these resources. Tool Purpose Link Notes Blackboard Announcements, Grades https://blackboard.syr.edu Sign in with your NetId JupyterHub Python Programming, Code Samples, Slides, Labs, HW. https://v2hub.ischool.syr.edu Sign in with your NetId Microsoft Teams Chat with classmates / Instructors. Virtual office hours. https://teams.ist256.com Sign in with your SU Microsoft Account Polley In-Class polling for large group sessions. https://poll.ist256.com Sign in with your SU Microsoft Account Severance Textbook The popular \u201cPython for Everyone\u201d book. https://www.py4e.com/book Available in a variety of different formats. Zoom Videoconferencing tool we use for office hours and student support. https://zoom.us Access through Blackboard Please consult the Course Links section for details.","title":"3rd Party Services Used in This Course"},{"location":"syllabus/#bring-your-own-device","text":"This course uses the BYOD (Bring Your Own Device) model. For Large Group you need a device to ask and answer questions, basically to participate in group chat and polls (Polley). This can be a smartphone, tablet or laptop (Mac, Windows, or Chromebook). Do not try to code along in large group unless you are experienced. It is best to take notes and ask questions. For Recitation you need a device for which you can write code in the browser using Jupyter Hub. This should be a laptop computer (Mac, Windows or Chromebook). You will be expected to bring this device to recitation and use it to write code as part of participating in the recitation. Since you will code in a web browser using the provided JupyterHub platform, the hardware requirements are minimal. Any laptop, or chromebook should suffice.","title":"Bring Your Own Device"},{"location":"syllabus/#tutoring","text":"The University offers free group tutoring for this course through the Center for Learning and Student Success (CLASS). Sign up for tutoring at: http://myt.syr.edu . For more information on individual and group tutoring sessions, please visit: https://class.syr.edu/academic-support/","title":"Tutoring"},{"location":"syllabus/#methods-of-evaluation","text":"","title":"Methods of Evaluation"},{"location":"syllabus/#grading","text":"This course uses a well thought out mix of formative, summative, in-class and out-of-class instruments to assess your knowledge acquisition. A variety of techniques are used to cater to students of different learning styles and assess the course learning outcomes. Assessment Name Blackboard Gradebook Type Learning Outcomes Quantity Points Each Points Total Pct Of Total Grade How Do I Turn it in? Exams E1 - E2 Assessment 1,2,3 2 45 90 35% See course schedule for dates Project P1 - P4 Assessment 1,2,3,5 1 49 49 20% Project folder on Jupyterhub Class Coding Labs L01 - L13 Practice 1,2,3,4 13 3 39 Run the submission script at end of the Lab in Jupyterhub Homework H02 - H13 Practice 1,2,3,4 12 3 36 Run the submission script at end of the Homework in Jupyterhub Recitation Code S02 - S13 Practice 1,2,3 12 3 36 Run the submission script at the end of recitation Computational Literacy Diagnostic C1 - C2 Practice 1 2 3 6 45% In Small Group from Blackboard TOTAL 256 For a comprehensive list due dates and times for all assignments, consult the What\u2019s Due? section of the Course Schedule .","title":"Grading"},{"location":"syllabus/#exams-e1-e2","text":"Exams are high-stakes, summative assessments. They measure the individual\u2019s ability to recall, understand, and apply the course material. They are one of two instruments in this course which measures your mastery of the learning outcomes. There will be 2 exams in the course. Each exam focuses on specific lessons, but due to the nature of the course material, all exams are cumulative. Exams are issued in class. Exams are closed book. No used of Notes, Jupyterhub, or any outside resources. You will have 45 minutes to completethe exam. Students can bring a one page cheat sheet with typed or hand written notes and/or code samples. Questions consist of multiple choice, fill-in-the blank, and short-answer. If you require a special testing accommodation, you should schedule to take the exam in the CDS testing center as it will be difficult to accommodate exam time extensions in class. There are no make-up exams. Exam dates are posted on the syllabus, please plan accordingly.","title":"Exams (E1 - E2)"},{"location":"syllabus/#project-p1-p4","text":"The project is the other high-stakes summative assessment. The goal of the project is to demonstrate your ability as an individual to perform a data analysis in Python. It should represent an accurate culmination of what you have learned in the course. You will work on the project individually, be expected to produce working code, and be able to explain it at both a high and detailed level. The project is divided into 4 phases; due dates are posted on the course schedule. You will receive feedback and advice after the first two deliverables; a project grade after the final deliverable. Each project phase must be submitted on Jupyterhub using the provided submission notebook. Late submissions are not accepted. We need time to grade. The What\u2019s Due section of the syllabus outlines the two exam dates.","title":"Project (P1 - P4)"},{"location":"syllabus/#project-phases","text":"Phase Name Deliverables P1 Data Set Selection Chose a primary and backup dataset of interest for which you will perform your data analysis. You will recieve feedback only. P2 Exploratory Data Analysis Write python code to explore your dataset as to understand it and to extract information as to create your data story. P3 Data Product Write python code to tell a data story with your dataset. This should allow uses to interact with the data and see visualizations. P4 Demo and Reflection Demo video of how your data product works and a video reflection of what you learned.","title":"Project Phases"},{"location":"syllabus/#criteria-for-project-grade","text":"Complete all project deliverables on time, and to satisfaction as per the requirements. While you recieve a grade for P4, work from all other phases are factored into your grade. Your code clearly demonstrates what you learned; the code you write is in the style learned throughout the course. Take instructor feedback was taken into consideration. Journal as your work on your project, recording time and tasks. Effective data analysis, coherent data story, evidence of manipulations to source data as to create improvements to the data story. Polished final data product that uses interact for inputs. In addition, there is a grade limit based on the number of lines of student-written code that is used in the project. Note: copies of code from class or elsewhere do not count. This must be code you wrote yourself that directly impacts the project\u2019s behavior. Lines of student-written code in the project Maximum Possible grade 100 or more A+ 50 to 100 B+ Under 50 C+","title":"Criteria for Project Grade"},{"location":"syllabus/#grading-scale-for-project","text":"Finally, you are assigned a letter grade for your project. This letter grade is translated to a number of points based on this table. Project Grade Assigned Points A+ 49 A 47 A- 45 B+ 42 B 40 B- 37 C+ 35 C 32 C- 30 D+ 27 D 25 D- 20 F 0 Specifics on the project as well as details of each deliverable can be found under your project folder in Jupyterhub.","title":"Grading Scale For Project"},{"location":"syllabus/#class-coding-labs-l01-l13","text":"Each week there will be an out-of-class hands-on lab programming activity. The purpose of the lab is to provide guided, hands-on programming practice. Labs are your first opportunity to get your hands on a keyboard and start programming. This is a low-stakes assessment, formative assessment. The What\u2019s Due section of the syllabus identifies the lab you should complete. You can find the lab activity on JupyterHub. This activity must be completed and turned submitted by the due date. You may work alone or with a partner as you complete the lab. If you work with another, you should both complete the lab individually, and you should make a note of who your lab partner was when you completed your work. As to not draw attention to a potential academic integrity violation. If you are having difficulty completing the lab, you are welcome to review the lab walk-through video which guide you through the more difficult parts of the lab. You are encouraged to only consult the walk-through when you are stuck.","title":"Class Coding Labs (L01 - L13)"},{"location":"syllabus/#rubric-for-class-coding-labs","text":"Lab Criteria Definitions: Code Correct means all You Code sections of the lab are correct. Code Complete means all You Code sections have an honest attempt to code the problem at hand. Please note this does not imply the code is correct. If the code is not correct, there is an adequate reflection with student questions. Cells Executed means all code cells in the lab display evidence they were executed in your lab submission. Metacognition Complete means the student made an honest effort to answer the open-ended questions in the lab adequately conveying what you have learned and what still confuses you. This should be evident in the work you have done to complete the lab. We value reflection. It is important to the learning process. Lab Criteria Assigned Grade All 4 criteria met 3 3 criteria met 2 2 criteria met 1 Less than 2 criteria met 0","title":"Rubric for Class Coding Labs"},{"location":"syllabus/#homework-h02-h13","text":"Practice makes perfect. Each week you will be assigned homework to complete outside of class. The goal of the homework is practice problem solving with code independently. Throughout the process you should take inventory of your abilities with respect to the material. While it is admirable to get the code correct, that is not the evaluation criteria nor is it the purpose of the homework. You should use the homework as a personal gauge for how well you are grasping the material. You can find the the homework assignments on JupyterHub. The What\u2019s Due section of the syllabus identifies the homework assignment you should complete. Homework are individual assignments . You can collaborate on strategy but you must must work alone on the assignment. You must be able to explain the code you write, or it will be considered an academic integrity violation. It\u2019s not about getting it right, but it is about making an honest self-assessment! For each homework there is an advice video which provides hints and tips for how you can approach the homework assignment. You are encouraged to only consult the video when you are having difficulty with the homework. If you get assistance from somewhere else, such as online, or someone else such as a tutor, or the an AI assistant you must divulge that in your submission or it will be considered an academic integrity violation.","title":"Homework (H02 - H13)"},{"location":"syllabus/#rubric-for-homework","text":"Homework Criteria Definitions: Code Correct means an honest attempt was made at a solution and the solution is correct. For incorrect solutions, the code runs, might not be correct, but there is some explanation in the Metacognition section. Code Well Written means your code is easy to understand, modular in nature, has aptly named variables, was programmed in the style we learned in class, and demonstrates what you learned that week. Problem Analysis Complete problem analysis was complete, identifying the problem\u2019s inputs, outputs, and algorithm/plan. Metacognition Complete means the student made an honest effort to answer the open-ended questions in the assignment. Homework Criteria Assigned Grade All 4 criteria met 3 3 criteria met 2 2 criteria met 1 Less than 2 criteria met 0","title":"Rubric for Homework"},{"location":"syllabus/#recitation-code-assignment-s02-s13","text":"Your recitation professor will measure attendance and participation each session through you turning in your recitation code activity. This is the code you work on in class with your classmates. If you are not in class, you will not recieve credit. The specific criteria is entirely at the discretion of your instructor, but most likely consists participating in the programming assignment completed in class.","title":"Recitation Code Assignment (S02 - S13)"},{"location":"syllabus/#computational-literacy-diagnostic-c1-c2","text":"There are two Diagnostic exams issues in class. The purpose of these exams is to measure student\u2019s computational literacy skills before and after the foundational units in the course. This information is used to study the effectiveness of the course material in improving computational literacy. These exams are not graded. Points are awarded for completion when assigned in class.","title":"Computational Literacy Diagnostic (C1 - C2)"},{"location":"syllabus/#grading-scale-for-final-grade","text":"We use the following grading scale for translating your total points earned into a letter grade to be submitted to the University registrar. Student Achievement Total Points Earned Registrar Grade Grade Points Mastery 243 - 256 A 4.000 230 - 242 A- 3.666 Satisfactory 217 - 229 B+ 3.333 204 - 216 B 3.000 192 - 203 B- 2.666 Low Passing 179 - 191 C+ 2.333 166 - 178 C 2.000 153 - 165 C- 1.666 Unsatisfactory 128 - 152 D 1.000 0 - 127 F 0.000","title":"Grading Scale For Final Grade"},{"location":"syllabus/#course-specific-policies","text":"","title":"Course Specific Policies"},{"location":"syllabus/#due-dates","text":"Late work is not accepted. Due to the formative nature of work in the course (practice with timely feedback), it does not make sense to accept late work. Please plan to keep pace with the course by completing your practice exercises on time. Due dates are posted on the Syllabus in the course schedule section, specifically What\u2019s Due? . Due dates are also posted in Blackboard. Once again: In order to provide timely and relevant feedback, no late work is accepted. Exceptions will only be made under extreme circumstances with supporting University documentation of illness or personal reasons.","title":"Due Dates"},{"location":"syllabus/#extra-credit","text":"Earning Research Credit through the CITRA Portal This course participates in the Communication, Information, and Technology Research Alliance (CITRA) Research Pool. This is a shared resource for students interested in participating in scientific research being conducted by Newhouse or iSchool faculty and students, and you can earn credit for this course in exchange for volunteering for those studies. At any time during the semester, you can visit https://ischool.syr.edu/citra to read more about the study participation opportunities. Note that there may not always be studies available and you might not be eligible for all studies, but that the list of studies is updated frequently so you should check for new studies throughout the semester. For each study listed there are specific instructions for how to sign up and participate\u2014if you have questions, please email the researcher listed directly. When you sign up for a CITRA Pool study, you will earn credits equal to roughly 1 credit for each 30 minutes of study-participation time (although some studies could be worth more or less, depending on what you are asked to do). Each CITRA Pool credit can be assigned only to one course, and study participation must be completed by the last class day of the semester. Finally, it is important to understand that it is not mandatory that you participate in research to earn course credit. If you would still like to earn course credit but are not interested in volunteering for any of the CITRA Pool studies, you may contact the coordinators of the CITRA Pool for more information about alternative credit activities. For iSchool courses, your contact is the CITRA coordinator Dr. Jaime Banks (banks@syr.edu). You may also email those contacts for any other questions, comments, or concerns you have about the CITRA Pool system. Additional extra credit opportunities may be available throughout the semester. Your instructor will announce the details if they are available. For our particular class you are limited to earning extra 9 credits for the semester, or the equivalent of 3 practice assignments (lab, small group, or homework).","title":"Extra Credit"},{"location":"syllabus/#course-withdrawal","text":"Only the main section instructor can sign a withdraw petition. We will only sign a withdraw from this course based on poor academic performance (F grade). You can always re-take the course and replace your failing grade with a passing grade. If you are putting in the time and effort it is very difficult to fail this course in the first place. This reserves course withdraws for their original intended purpose - extreme circumstances with supporting University documentation of illness or personal reasons.","title":"Course Withdrawal"},{"location":"syllabus/#use-of-ai-assistants","text":"Based on the assignments in this course and our specified learning outcomes, the full use of artificial intelligence as a tool, with disclosure and citation, is permitted in this course. Students do not need to ask permission to use these tools before starting an assignment, but they must explicitly and fully indicate which tools were used and describe how they were used.","title":"Use of AI Assistants"},{"location":"syllabus/#course-honor-code-academic-integrity","text":"What Does Academic Integrity Mean In This Course? The course honor code represents our commitment to Academic Integrity in a programming course. I drafted the class honor code to avoid academic negligence - situations where students are unaware that their actions are actually a form of cheating. Our honor code remedies this problem by clearly stating the expectations of Academic Integrity for this course. It states: All work is my own . Answers on all student work, assignments (labs, homework, problem sets, projects, papers, etc\u2026) and assessments (quizzes, exams, tests, etc\u2026) are my own individual work (except where collaboration is explicitly allowed and disclosed). In the case where collaboration is permitted I will only collaborate within my team. Your own work means it manifests your own thoughts and ideas, not someone else\u2019s. AI is included in the \u201csomeone else.\u201d I will not share answers. I will not make answers (either my own or the professor\u2019s) to work, assignments (labs, problem sets, projects, papers, homework, etc\u2026) and assessments (quizzes, exams, tests, etc\u2026) available to anyone else in or out of class. This includes posting them on the web / chegg / course hero, or sharing them in test banks. I will not misrepresent my ability. I will not engage in any activity which misrepresents or falsifies my knowledge of the subject matter and therefore improves my grade dishonestly. This includes unsanctioned test aids, copying homework, and assistance from unapproved sources outside of class. This includes passing off AI output as your own work. I will give credit. I will always pay attribution to my sources, and not misrepresent the works of others as my own. If you get code from the internet, a tutor, or an AI assistant, you must cite it like you would any source in an academic paper. If you used AI, disclose that. I accept the honor code and its consequences. I understand and accept that that all work I submit is subject to the honor code, and if I violate this honor code I my instructor is obligated to report me to the University\u2019s office of Academic Integrity. This can be easily summarized as: If code you are submitting did not originate from you, you must clearly disclose where it came from. When in doubt, ask. When unsure, disclose openly. Most students who get into trouble are trying to hide their academic dishonesty. Don\u2019t do that. We will catch you easily.","title":"Course Honor Code - Academic Integrity"},{"location":"syllabus/#sanctions-for-violations-of-academic-integrity","text":"Oops. I violated academic integrity. What now? All suspected academic integrity violation will be reported to the university\u2019s office of academic integrity. Proposed sanction for violations of a low-stakes assessment such as a homework assignment or lab, is a grade of zero . Proposed sanction for any violation on a summative assessment such as an exam or the final project is a grade of F in the course .","title":"Sanctions for Violations of Academic Integrity"},{"location":"syllabus/#syracuse-university-policies","text":"Syracuse University has a variety of other policies designed to guarantee that students live and study in a community respectful of their needs and those of fellow students. These policies apply to this course and can be found at this URL: https://academicaffairs.syracuse.edu/important-syllabus-reminders/","title":"Syracuse University Policies"},{"location":"syllabus/#course-schedule","text":"Assigned readings and help videos can be found in the corresponding lesson folder on Jupyterhub. Dates Topic 1/13 - 1/19 Lesson 01: Introduction to Python Programming 1/20 - 1/26 Lesson 02: Input, Output, Variables and Types No Large group on 1/20 due to MLK Day 1/27 - 2/2 Lesson 03: Conditionals 2/3 - 2/9 Lesson 04: Iterations 2/10 - 2/16 Lesson 05: User-defined Functions, Modules 2/17 - 2/23 Lesson 06: Strings and Text Processing 2/24 - 3/2 Lesson 07: File I/O and Persistence 3/3 - 3/9 Exam Week E1 on 3/3 in Large Group 3/10 - 3/16 SPRING BREAK No Classes 3/17 - 3/23 Lesson 08: Lists 3/24 - 3/30 Lesson 09: Dictionaries and JSON 3/31 - 4/6 Lesson 10: Pandas I 4/7 - 4/13 Lesson 11: Pandas II P1 project deliverable due on 4/11 4/14 - 4/20 Lesson 12: Data Visualization 4/21 - 4/27 Lesson 13: Web API\u2019s P2 project deliverable due on 4/25 4/28 - 5/4 E2 on 4/28 in Large Group P3 and P4 Project delerables due 5/4","title":"Course Schedule"},{"location":"syllabus/#whats-due","text":"There are deliberables due consistently each week. Use this table to track the due dates of all graded work in this course. Dates and times are Eastern Time Zone. Labs are due Tuesdays, Small group assignments are completed in your small group, and Homework are due Fridays. Date Due Time Due Gradebook Points Where? What is Due? 1/17/2025 11:59 PM L01 3 Jupyterhub 01-Intro/LAB-Intro.ipynb 1/15/2025 11:59 PM C1 3 Small Group Computational Literacy Diagnostic 1 1/21/2025 11:59 PM L02 3 Jupyterhub 02-Variables/LAB-Variables.ipynb 1/22/2025 11:59 PM S02 3 Jupyterhub 02-Variables/SmallGroup-Variables.ipynb 1/24/2025 11:59 PM H02 3 Jupyterhub 02-Variables/HW-Variables.ipynb 1/28/2025 11:59 PM L03 3 Jupyterhub 03-Conditionals/LAB-Conditionals.ipynb 1/29/2025 11:59 PM S03 3 Jupyterhub 03-Conditionals/SmallGroup-Conditionals.ipynb 1/31/2025 11:59 PM H03 3 Jupyterhub 03-Conditionals/HW-Conditionals.ipynb 2/4/2025 11:59 PM L04 3 Jupyterhub 04-Iterations/LAB-Iterations.ipynb 2/5/2025 11:59 PM S04 3 Jupyterhub 04-Iterations/SmallGroup-Iterations.ipynb 2/7/2025 11:59 PM H04 3 Jupyterhub 04-Iterations/HW-Iterations.ipynb 2/11/2025 11:59 PM L05 3 Jupyterhub 05-Functions/LAB-Functions.ipynb 2/12/2025 11:59 PM S05 3 Jupyterhub 05-Functions/SmallGroup-Functions.ipynb 2/14/2025 11:59 PM H05 3 Jupyterhub 05-Functions/HW-Functions.ipynb 2/18/2025 11:59 PM L06 3 Jupyterhub 06-Strings/LAB-Strings.ipynb 2/19/2025 11:59 PM S06 3 Jupyterhub 06-Strings/SmallGroup-Strings.ipynb 2/21/2025 11:59 PM H06 3 Jupyterhub 06-Strings/HW-Strings.ipynb 2/25/2025 11:59 PM L07 3 Jupyterhub 07-Files/LAB-Files.ipynb 2/26/2025 11:59 PM S07 3 Jupyterhub 07-Files/SmallGroup-Files.ipynb 2/28/2025 11:59 PM H07 3 Jupyterhub 07-Files/HW-Files.ipynb 3/3/2025 11:59 PM E1 45 Large Group E1: Exam 1 (Focus on Lessons 1-7) 3/5/2025 11:59 PM C2 3 Small Group Computational Literacy Diagnostic 2 3/18/2025 11:59 PM L08 3 Jupyterhub 08-Lists/LAB-Lists.ipynb 3/19/2025 11:59 PM S08 3 Jupyterhub 08-Lists/SmallGroup-Lists.ipynb 3/21/2025 11:59 PM H08 3 Jupyterhub 08-Lists/HW-Lists.ipynb 3/25/2025 11:59 PM L09 3 Jupyterhub 09-Dictionaries/LAB-Dictionaries.ipynb 3/26/2025 11:59 PM S09 3 Jupyterhub 09-Dictionaries/SmallGroup-Dictionaries.ipynb 3/28/2025 11:59 PM H09 3 Jupyterhub 09-Dictionaries/HW-Dictionaries.ipynb 4/1/2025 11:59 PM L10 3 Jupyterhub 10-Pandas-I/LAB-PandasI.ipynb 4/2/2025 11:59 PM S10 3 Jupyterhub 10-Pandas-I/SmallGroup-PandasI.ipynb 4/4/2025 11:59 PM H10 3 Jupyterhub 10-Pandas-I/HW-PandasI.ipynb 4/8/2025 11:59 PM L11 3 Jupyterhub 11-Pandas-II/LAB-PandasII.ipynb 4/9/2025 11:59 PM S11 3 Jupyterhub 11-Pandas-II/SmallGroup-PandasII.ipynb 4/11/2025 11:59 PM H11 3 Jupyterhub 11-Pandas-II/HW-PandasII.ipynb 4/11/2025 11:59 PM P1 0 Jupyterhub project/P1.ipynb 4/15/2025 11:59 PM L12 3 Jupyterhub 12-Visualization/LAB-Visualization.ipynb 4/16/2025 11:59 PM S12 3 Jupyterhub 12-Visualization/SmallGroup-Visualization.ipynb 4/18/2025 11:59 PM H12 3 Jupyterhub 12-Visualization/HW-Visualization.ipynb 4/22/2025 11:59 PM L13 3 Jupyterhub 13-WebAPIs/LAB-Webapis.ipynb 4/23/2025 11:59 PM S13 3 Jupyterhub 13-WebAPIs/SmallGroup-Webapis.ipynb 4/25/2025 11:59 PM H13 3 Jupyterhub 13-WebAPIs/HW-Webapis.ipynb 4/25/2025 11:59 PM P2 0 Jupyterhub project/P2.ipynb 4/28/2025 11:59 PM E2 45 Large Group E2: Exam 2 (Focus on Lessons 8-13) 5/4/2025 11:59 PM P3 0 Jupyterhub project/P3.ipynb 5/4/2025 11:59 PM P4 49 Jupyterhub project/P4.ipynb Page last revised on: 2025-01-12","title":"What's Due?"}]}